const config={t:"/assets/js/my_interceptor.js",i:"my_interceptor",intercept:{url:"/ghost/api/content/",list:[{o:"posts",u:"posts.json"},{o:"authors",u:"authors.json"},{o:"tags",u:"tags.json"}],l:["/api/"]}};function renew_script(){document.getElementById(config.i).src=config.t+"?v="+Date.now()}function replace_urls(e){var s,t=config.intercept;for(s of t.list){var n=t.url+s.o,r=t.url+s.u;if(-1!=e.indexOf(n))return replace_url(e,n,r)}return is_blacklisted(e)?void 0:e}function replace_url(e,s,t){s=e.indexOf(s);return e.substring(0,s)+t}function is_blacklisted(e){for(var s of config.intercept.l)if(-1!=e.indexOf(s))return!0;return!1}function modifyResponse(e){var s=JSON.stringify({}),e=new Headers(e.headers);return new Response(s,{status:200,headers:e})}function createFakeResponse(){var e=JSON.stringify({}),s=new Headers({p:"application/json"});return new Response(e,{status:200,headers:s})}!function(o){renew_script(),XMLHttpRequest.prototype.open=function(e,s,t,n,r){var i=replace_urls(s);void 0!==i?o.call(this,e,i,t,n,r):console.log("this url is blacklisted: "+s)}}(XMLHttpRequest.prototype.open,XMLHttpRequest.prototype.send),function(){var n=window.fetch;window.fetch=function(e,s){var t=replace_urls(e);return void 0!==t?n(t,s):(console.log("this url is blacklisted: "+e),new Promise(e=>{e(createFakeResponse())}))}}();