<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Marvin</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="guowb.xyz/"/>
  <updated>2017-03-25T05:02:39.621Z</updated>
  <id>guowb.xyz/</id>
  
  <author>
    <name>Marvin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git Permission Denied</title>
    <link href="guowb.xyz/2017/03/25/Git-Permission-Denied/"/>
    <id>guowb.xyz/2017/03/25/Git-Permission-Denied/</id>
    <published>2017-03-25T04:51:55.000Z</published>
    <updated>2017-03-25T05:02:39.621Z</updated>
    
    <content type="html"><![CDATA[<p>今天打算在Visual Studio里面使用Git，以前我都是直接用命令行或者客户端，然而一旦遇到文件加锁或者权限问题就无法在两个客户端都打开的情况下进行同步。我使用的是Visual Studio 2017，当我试着提交一些更改的时候出现了一个错误：<code>git failed with a fatal error permission denied unable to process</code> 大致就和<a href="http://stackoverflow.com/questions/34975423/visual-studio-2015-git-error-opensomefile-vc-opendb-permission-denied-fa" target="_blank" rel="external">这个网页</a>描述的问题一致。</p>
<p>解决方法就是更改.gitignore文件，忽略.opendb，或者直接从<a href="https://github.com/github/gitignore" target="_blank" rel="external">这个网站</a>下载Visual Studio的.gitignore文件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天打算在Visual Studio里面使用Git，以前我都是直接用命令行或者客户端，然而一旦遇到文件加锁或者权限问题就无法在两个客户端都打开的情况下进行同步。我使用的是Visual Studio 2017，当我试着提交一些更改的时候出现了一个错误：&lt;code&gt;git fa
    
    </summary>
    
      <category term="编程工具" scheme="guowb.xyz/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="GIT" scheme="guowb.xyz/tags/GIT/"/>
    
  </entry>
  
  <entry>
    <title>浅谈正则表达式</title>
    <link href="guowb.xyz/2017/03/11/%E6%B5%85%E8%B0%88%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>guowb.xyz/2017/03/11/浅谈正则表达式/</id>
    <published>2017-03-11T12:33:58.000Z</published>
    <updated>2017-03-11T13:12:10.036Z</updated>
    
    <content type="html"><![CDATA[<p>我不想让你在看到这个标题的时候就下意识地以为我又要罗列一大堆正则表达式的语法，这样就显得太无聊了，当然，我现在这种谈论无聊的资本主要是建立在别人的辛勤耕耘上——你尽可以在网络上搜索到一堆正则表达式的教程，泛滥在信息的海洋里，通过二进制的姿态传输到你的内存，纤毫毕现地在屏幕上勾勒着那些单调与乏味。</p>
<p>我想说说我的浅薄历程。我一开始接触正则表达式也被那些语法塞得一团糟，很快就忘了。直到后来我要写一些爬虫，我才重新去学习那些语法。这时候我才发现正则表达式的厉害之处。就拿最常用的非贪婪匹配<code>.*?</code>来说，这简直是极度有用的一种语法，假设你要匹配一段字符串中间的一些字符，你可以用一些定位字符作前后限定，然后用<code>(.*?)</code>来获得中间这段字符。不要小看了这个语法，我在写爬虫的时候用得最多的就是这种形式或者变种，写多了也就不觉得无聊，效率也提高了。</p>
<p>我提到这个例子无非就是想说明两点：第一，学习正则表达式的最好方式就是实践，埋头看语法有点浪费时间。第二，正则表达式在文字处理方面是一个很有用的工具，可以提升不少效率。无论是不是专业人员，我都建议学习一两种脚本语言，比如Python，调用正则表达式模块处理文字还是非常方便的。</p>
<p>最后，推荐一个学习正则表达式的网站：<a href="http://www.regexr.com/" target="_blank" rel="external">RegExr</a>，这个网站可以让你实时地看到自己写的正则表达式的匹配结果。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我不想让你在看到这个标题的时候就下意识地以为我又要罗列一大堆正则表达式的语法，这样就显得太无聊了，当然，我现在这种谈论无聊的资本主要是建立在别人的辛勤耕耘上——你尽可以在网络上搜索到一堆正则表达式的教程，泛滥在信息的海洋里，通过二进制的姿态传输到你的内存，纤毫毕现地在屏幕上
    
    </summary>
    
      <category term="编程语言" scheme="guowb.xyz/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="正则表达式" scheme="guowb.xyz/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Faster RCNN - 错误汇总</title>
    <link href="guowb.xyz/2017/03/10/Faster-RCNN-%E9%94%99%E8%AF%AF%E6%B1%87%E6%80%BB/"/>
    <id>guowb.xyz/2017/03/10/Faster-RCNN-错误汇总/</id>
    <published>2017-03-10T09:51:10.000Z</published>
    <updated>2017-03-11T09:28:25.434Z</updated>
    
    <content type="html"><![CDATA[<p> 你要知道，我的导师是研究光电技术的，我在实验室搬砖的项目和图像识别相关，当时我选择了Faster RCNN这个开源框架来识别各种纷繁复杂（黑白分明）的OCT图像，OCT的全称是Optical Coherence Tomography，也就是光学相干断层成像，它和大家熟悉的CT成像（计算机断层扫描）是属于一个范畴的技术，OCT的主要优点在于对人体的伤害小（相对于CT成像而言）。</p>
<p>Faster RCNN是一个图像识别的工具，基于CNN，具有更快的速度，它不仅可以识别出图像中的物体，还可以用矩形框定位该物体并给出置信度。初期，实验室老师给了我少量图像让我识别，我手动标注了几百张，训练之后测试效果还不错。过了一段时间，老师得到了更多的数据，此时手动标注显然是不现实的，因为所有图片加起来有几千张，我一天最多能标注几百张而已，而且标注之后我感到很想睡觉，困乏无力，于是我将整张图片当作单个物体的区域，坐标类似于<code>(0, 0, length, width)</code>的形式，然后将图片放进去训练，没想到在训练的第一阶段就出现错误了。</p>
<p>错误的具体信息我记不得了，当时也没有截图，都是Python的一些错误提示（没错，我爱Python），大致如下：</p>
<ul>
<li>数值越界</li>
<li>Key Error</li>
</ul>
<p>当时试过很多方法，比如修改学习率，重新制作数据集，结果都无效，也不知道后来灵感怎么就闪现出来了，竟发现了问题所在，解决了这两个bug。</p>
<ul>
<li>数值越界是因为我前面提到过的，我将整张图片作为单个物体的区域，也就是区域坐标为<code>(0, 0, length, width)</code>，因为坐标里面含有0，导致Faster RCNN在训练区域的时候出现了负数，因而报错，解决方法就是将左上角坐标<code>(0, 0)</code>稍微向右下角偏移一些，比如变成<code>(5, 5)</code>，这对训练的影响不大。</li>
<li>Key Error的原因是没有删除之前用Faster RCNN训练所产生的cache，删除即可。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 你要知道，我的导师是研究光电技术的，我在实验室搬砖的项目和图像识别相关，当时我选择了Faster RCNN这个开源框架来识别各种纷繁复杂（黑白分明）的OCT图像，OCT的全称是Optical Coherence Tomography，也就是光学相干断层成像，它和大家熟悉的
    
    </summary>
    
      <category term="计算机视觉" scheme="guowb.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="计算机视觉" scheme="guowb.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像识别" scheme="guowb.xyz/tags/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"/>
    
      <category term="BUG" scheme="guowb.xyz/tags/BUG/"/>
    
  </entry>
  
</feed>
